version: "3.5"

networks:
  postgres:
    driver: bridge

volumes:
    postgres:
    pgadmin:

services:

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -h localhost -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports: 
      - "5432:5432"
    networks:
      - postgres
 
  pgadmin:
    container_name: pgAdmin
    image: dpage/pgadmin4:snapshot
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  telegram_bot:
    container_name: telegram_bot
    image: telegram_bot
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      HOST: ${HOST}
      TOKEN: ${TOKEN}
#    ports:
#      - "3001:80"
    networks:
      - postgres
    depends_on: 
      - postgres
    links:
      - postgres
